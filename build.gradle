plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.ala'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

sourceSets {
	acceptanceTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
		java {
			srcDir file('/src/acceptance-test/java')
		}
		resources {
			srcDir file('/src/acceptance-test/resources')
	}   }
}

configurations {
	acceptanceTestImplementation.extendsFrom testImplementation
	acceptanceTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

	//db
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'net.sourceforge.htmlunit:htmlunit:2.46.0'
	testImplementation "org.testcontainers:postgresql:1.15.2"
	testImplementation 'org.springframework.security:spring-security-test'
}

task acceptanceTest(type: Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
	classpath = sourceSets.acceptanceTest.runtimeClasspath
	shouldRunAfter test
}

tasks.withType(Test) {
	useJUnitPlatform()
}

check.dependsOn(acceptanceTest)
